DROP TABLE IF EXISTS role_privilege CASCADE;
DROP TABLE IF EXISTS user_role CASCADE;
DROP TABLE IF EXISTS privilege CASCADE;
DROP TABLE IF EXISTS role CASCADE;
DROP TABLE IF EXISTS ueberweisung CASCADE;
DROP TABLE IF EXISTS konto CASCADE;
DROP TABLE IF EXISTS user CASCADE;

CREATE TABLE user (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	vorname VARCHAR(255) NOT NULL,
	nachname VARCHAR(255) NOT NULL,
	username VARCHAR(255) UNIQUE NOT NULL,
	password VARCHAR(60) NOT NULL,
	treuepunkte BIGINT NOT NULL DEFAULT 0,
	telefonnummer VARCHAR(20),
	aktiv BOOLEAN NOT NULL DEFAULT TRUE,
	gesperrt BOOLEAN NOT NULL DEFAULT FALSE,
	PRIMARY KEY (id)
);

INSERT INTO user (vorname, nachname, username, password, treuepunkte) VALUES
	('Hans', 'Hansen', 'hhansen', '{noop}ichbinhans', 0),
	('Peter', 'Petersen', 'ppetersen', '{noop}ichbinpeter', 50),
	('Anne', 'Admin', 'aadmin', '{noop}ichbinanne', 0),
	('Stefanie', 'Service', 'sservice', '{noop}ichbinstefanie', 0);

CREATE TABLE role (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(45) NOT NULL UNIQUE,
	PRIMARY KEY (id)
);

INSERT INTO role (name) VALUES
	('KUNDE'),
	('SERVICE'),
	('ADMIN');

CREATE TABLE user_role(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	userid BIGINT NOT NULL,
	roleid BIGINT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY unique_username_role (userid,roleid),
	CONSTRAINT fk_user_role_userid FOREIGN KEY (userid) REFERENCES user (id),
	CONSTRAINT fk_user_role_roleid FOREIGN KEY (roleid) REFERENCES role (id)
);

INSERT INTO user_role (userid, roleid) VALUES
	(
		(SELECT u.id FROM user u WHERE u.username='hhansen'),
		(SELECT r.id FROM role r WHERE r.name='KUNDE')
	),
	(
		(SELECT u.id FROM user u WHERE u.username='ppetersen'),
		(SELECT r.id FROM role r WHERE r.name='KUNDE')
	),
	(
		(SELECT u.id FROM user u WHERE u.username='sservice'),
		(SELECT r.id FROM role r WHERE r.name='SERVICE')
	),
	(
		(SELECT u.id FROM user u WHERE u.username='aadmin'),
		(SELECT r.id FROM role r WHERE r.name='ADMIN')
	)
;

CREATE TABLE privilege (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(45) NOT NULL UNIQUE,
	PRIMARY KEY (id)
);

INSERT INTO privilege (name) VALUES
	('ROLE_BENUTZER_AUFLISTEN'),
	('ROLE_UEBERWEISUNG_TAETIGEN'),
	('ROLE_UEBERWEISUNGEN_ANZEIGEN')
;

CREATE TABLE role_privilege(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	roleid BIGINT NOT NULL,
	privilegeid BIGINT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY unique_role_privilege (roleid,privilegeid),
	CONSTRAINT fk_privilege_role_roleid FOREIGN KEY (roleid) REFERENCES role (id),
	CONSTRAINT fk_privilege_role_privilegeid FOREIGN KEY (privilegeid) REFERENCES privilege (id)
);

INSERT INTO role_privilege (roleid, privilegeid) VALUES
	(
		(SELECT r.id FROM role r WHERE r.name='ADMIN'),
		(SELECT p.id FROM privilege p WHERE p.name='ROLE_BENUTZER_AUFLISTEN')
	),
		(
		(SELECT r.id FROM role r WHERE r.name='KUNDE'),
		(SELECT p.id FROM privilege p WHERE p.name='ROLE_UEBERWEISUNG_TAETIGEN')
	),
		(
		(SELECT r.id FROM role r WHERE r.name='KUNDE'),
		(SELECT p.id FROM privilege p WHERE p.name='ROLE_UEBERWEISUNGEN_ANZEIGEN')
	),
		(
		(SELECT r.id FROM role r WHERE r.name='SERVICE'),
		(SELECT p.id FROM privilege p WHERE p.name='ROLE_UEBERWEISUNG_TAETIGEN')
	)
;

CREATE TABLE konto(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	userid BIGINT NOT NULL,
	name VARCHAR(45) NOT NULL,
	saldo DECIMAL(20,2) NOT NULL DEFAULT 0.0,
	PRIMARY KEY (id),
	UNIQUE KEY unique_user_kontoname (userid,name),
	CONSTRAINT fk_konto_userid FOREIGN KEY (userid) REFERENCES user (id)
);

INSERT INTO konto (userid, name, saldo) VALUES
	(
		(SELECT u.id FROM user u WHERE u.username='hhansen'),
		'Girokonto',
		500.23
	),
	(
		(SELECT u.id FROM user u WHERE u.username='hhansen'),
		'Sparbuch',
		9000.01
	),
	(
		(SELECT u.id FROM user u WHERE u.username='ppetersen'),
		'Girokonto',
		0.0
	),
	(
		(SELECT u.id FROM user u WHERE u.username='ppetersen'),
		'Sparbuch',
		1000.00
	)
;

CREATE TABLE ueberweisung(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	quellkonto BIGINT NOT NULL,
	zielIban VARCHAR(45) NOT NULL,
	betrag DECIMAL(20,2) NOT NULL,
	datum TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	text VARCHAR(255) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT fk_ueberweisung_kontoid FOREIGN KEY (quellkonto) REFERENCES konto (id)
);

INSERT INTO ueberweisung (quellkonto, zielIban, betrag, datum, text) VALUES
	(
		(SELECT k.id FROM konto k WHERE k.name='Girokonto' AND k.userid=(SELECT u.id FROM user u WHERE u.username='hhansen')),
		'DE27100777770209299700',
		23.5,
		PARSEDATETIME('20150101', 'yyyymmdd'),
		'Hallo Heidi, alles Gute zum Geburtstag!'
	),
	(
		(SELECT k.id FROM konto k WHERE k.name='Girokonto' AND k.userid=(SELECT u.id FROM user u WHERE u.username='ppetersen')),
		'DE11520513735120710131',
		6.66,
		PARSEDATETIME('20171224', 'yyyymmdd'),
		'Frohes Fest!'
	)
;